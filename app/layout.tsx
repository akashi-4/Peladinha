import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import Link from "next/link";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const playerLinks = [
  { href: "/player/add-player", label: "Add Player" },
  { href: "/player/players-stats", label: "Players Stats" },
  { href: "/player/players-list", label: "Players List" },
];

const matchLinks = [
  { href: "/match/add-match", label: "Add Match" },
  { href: "/match/matches-list", label: "Matches List" },
];

export const metadata: Metadata = {
  title: "Futebolada",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        {/* Navigation Bar */}
        <nav className="bg-black text-blue-400 p-4 flex justify-between font-bold">
          <h1 className="text-xl font-bold">Futebolada</h1>
          <div className="space-x-6">
            <Link href="/" className="hover:underline">Home</Link>
            
            {/* Player Dropdown */}
            <div className="inline-block relative group">
              <span className="cursor-pointer hover:underline">Player</span>
              <div className="absolute hidden group-hover:block w-40 right-0 pt-2">
                <div className="bg-black border border-blue-900 rounded-lg shadow-lg p-2 space-y-2">
                  {playerLinks.map((link) => (
                    <Link 
                      key={link.href}
                      href={link.href} 
                      className="block hover:underline"
                    >
                      {link.label}
                    </Link>
                  ))}
                </div>
              </div>
            </div>

            {/* Match Dropdown */}
            <div className="inline-block relative group">
              <span className="cursor-pointer hover:underline">Match</span>
              <div className="absolute hidden group-hover:block w-40 right-0 pt-2">
                <div className="bg-black border border-blue-900 rounded-lg shadow-lg p-2 space-y-2">
                  {matchLinks.map((link) => (
                    <Link 
                      key={link.href}
                      href={link.href} 
                      className="block hover:underline"
                    >
                      {link.label}
                    </Link>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </nav>
        
        {/* Page Content */}
        <main className="p-6">{children}</main>
      </body>
    </html>
  );
}
